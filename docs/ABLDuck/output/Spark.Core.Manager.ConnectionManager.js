Ext.data.JsonP.Spark_Core_Manager_ConnectionManager({"mixedInto":[],"parentMixins":[],"files":[],"alternateClassNames":[],"mixins":[],"requires":[],"uses":[],"aliases":{},"id":"class-Spark.Core.Manager.ConnectionManager","tagname":"class","name":"Spark.Core.Manager.ConnectionManager","extends":"Spark.Core.Manager.Manager","author":"","shortDoc":"","html":"\u003cdiv\u003e\u003cpre class\u003d\"hierarchy\"\u003e\u003ch4\u003eHierarchy\u003c/h4\u003e\u003cdiv class\u003d\"subclass first-child\"\u003e\u003ca href\u003d\"#!/api/Spark.Core.Service.Service\" rel\u003d\"Spark.Core.Service.Service\" class\u003d\"docClass\"\u003eSpark.Core.Service.Service\u003c/a\u003e\u003cdiv class\u003d\"subclass \"\u003e\u003ca href\u003d\"#!/api/Spark.Core.Manager.Manager\" rel\u003d\"Spark.Core.Manager.Manager\" class\u003d\"docClass\"\u003eSpark.Core.Manager.Manager\u003c/a\u003e\u003cdiv class\u003d\"subclass \"\u003e\u003cstrong\u003eSpark.Core.Manager.ConnectionManager\u003c/strong\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003ch4\u003eImplements\u003c/h4\u003e\u003cdiv class\u003d\"dependency\"\u003e\u003ca href\u003d\"#!/api/Spark.Core.Manager.IConnectionManager\" rel\u003d\"Spark.Core.Manager.IConnectionManager\" class\u003d\"docClass\"\u003eIConnectionManager\u003c/a\u003e\u003c/div\u003e\u003c/pre\u003e\u003cdiv class\u003d\"doc-contents\"\u003e\u003cp\u003eConnection Manager\nStarts up and manager all connections to other servers.  e.g. other Progress appservers or extenal web services.\u003c/p\u003e\n\u003c/div\u003e\u003cdiv class\u003d\"members\"\u003e\u003cdiv class\u003d\"members-section\"\u003e\u003cdiv class\u003d\"definedBy\"\u003eDefined By\u003c/div\u003e\u003ch3 class\u003d\"members-title icon-constructor\"\u003eConstructors\u003c/h3\u003e\u003cdiv class\u003d\"subsection\"\u003e\u003cdiv id\u003d\"constructor-ConnectionManager1\" class\u003d\"member first-child not-inherited\"\u003e\u003ca href\u003d\"#\" class\u003d\"side expandable\"\u003e\u003cspan\u003e\u0026nbsp;\u003c/span\u003e\u003c/a\u003e\u003cdiv class\u003d\"title\"\u003e\u003cdiv class\u003d\"meta\"\u003e\u003cspan class\u003d\"defined-in\" rel\u003d\"Spark.Core.Manager.ConnectionManager\"\u003eSpark.Core.Manager.ConnectionManager\u003c/span\u003e\u003cbr/\u003e\u003c/div\u003e\u003ca href\u003d\"#!/api/Spark.Core.Manager.ConnectionManager-constructor-ConnectionManager1\" class\u003d\"name expandable\"\u003eConnectionManager\u003c/a\u003e()\u003cspan class\u003d\"signature\"\u003e\u003c/span\u003e\u003c/div\u003e\u003cdiv class\u003d\"description\"\u003e\u003cdiv class\u003d\"short\"\u003e\u0026nbsp;\u003c/div\u003e\u003cdiv class\u003d\"long\"\u003e\u0026nbsp;\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv class\u003d\"members-section\"\u003e\u003cdiv class\u003d\"definedBy\"\u003eDefined By\u003c/div\u003e\u003ch3 class\u003d\"members-title icon-event\"\u003eEvents\u003c/h3\u003e\u003cdiv class\u003d\"subsection\"\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv class\u003d\"members-section\"\u003e\u003cdiv class\u003d\"definedBy\"\u003eDefined By\u003c/div\u003e\u003ch3 class\u003d\"members-title icon-property\"\u003eProperties\u003c/h3\u003e\u003cdiv class\u003d\"subsection\"\u003e\u003cdiv id\u003d\"property-oLoggingManager\" class\u003d\"member first-child not-inherited\"\u003e\u003ca href\u003d\"#\" class\u003d\"side expandable\"\u003e\u003cspan\u003e\u0026nbsp;\u003c/span\u003e\u003c/a\u003e\u003cdiv class\u003d\"title\"\u003e\u003cdiv class\u003d\"meta\"\u003e\u003cspan class\u003d\"defined-in\" rel\u003d\"Spark.Core.Manager.ConnectionManager\"\u003eSpark.Core.Manager.ConnectionManager\u003c/span\u003e\u003cbr/\u003e\u003c/div\u003e\u003ca href\u003d\"#!/api/Spark.Core.Manager.ConnectionManager-property-oLoggingManager\" class\u003d\"name expandable\"\u003eoLoggingManager\u003c/a\u003e : \u003ca href\u003d\"#!/api/Spark.Core.Manager.ILoggingManager\" rel\u003d\"Spark.Core.Manager.ILoggingManager\" class\u003d\"docClass\"\u003eILoggingManager\u003c/a\u003e\u003cspan class\u003d\"signature\"\u003e\u003cspan class\u003d\"protected\"\u003ePROTECTED\u003c/span\u003e\u003c/span\u003e\u003c/div\u003e\u003cdiv class\u003d\"description\"\u003e\u003cdiv class\u003d\"short\"\u003e\u0026nbsp;\u003c/div\u003e\u003cdiv class\u003d\"long\"\u003e\u0026nbsp;\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv class\u003d\"members-section\"\u003e\u003cdiv class\u003d\"definedBy\"\u003eDefined By\u003c/div\u003e\u003ch3 class\u003d\"members-title icon-method\"\u003eMethods\u003c/h3\u003e\u003cdiv class\u003d\"subsection\"\u003e\u003cdiv id\u003d\"method-initialize\" class\u003d\"member first-child not-inherited\"\u003e\u003ca href\u003d\"#\" class\u003d\"side expandable\"\u003e\u003cspan\u003e\u0026nbsp;\u003c/span\u003e\u003c/a\u003e\u003cdiv class\u003d\"title\"\u003e\u003cdiv class\u003d\"meta\"\u003e\u003cspan class\u003d\"defined-in\" rel\u003d\"Spark.Core.Manager.ConnectionManager\"\u003eSpark.Core.Manager.ConnectionManager\u003c/span\u003e\u003cbr/\u003e\u003c/div\u003e\u003ca href\u003d\"#!/api/Spark.Core.Manager.ConnectionManager-method-initialize\" class\u003d\"name expandable\"\u003einitialize\u003c/a\u003e()\u003cspan class\u003d\"signature\"\u003e\u003c/span\u003e\u003c/div\u003e\u003cdiv class\u003d\"description\"\u003e\u003cdiv class\u003d\"short\"\u003e\u0026nbsp;\u003c/div\u003e\u003cdiv class\u003d\"long\"\u003e\u0026nbsp;\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv id\u003d\"method-dispose\" class\u003d\"member  not-inherited\"\u003e\u003ca href\u003d\"#\" class\u003d\"side expandable\"\u003e\u003cspan\u003e\u0026nbsp;\u003c/span\u003e\u003c/a\u003e\u003cdiv class\u003d\"title\"\u003e\u003cdiv class\u003d\"meta\"\u003e\u003cspan class\u003d\"defined-in\" rel\u003d\"Spark.Core.Manager.ConnectionManager\"\u003eSpark.Core.Manager.ConnectionManager\u003c/span\u003e\u003cbr/\u003e\u003c/div\u003e\u003ca href\u003d\"#!/api/Spark.Core.Manager.ConnectionManager-method-dispose\" class\u003d\"name expandable\"\u003edispose\u003c/a\u003e()\u003cspan class\u003d\"signature\"\u003e\u003c/span\u003e\u003c/div\u003e\u003cdiv class\u003d\"description\"\u003e\u003cdiv class\u003d\"short\"\u003e\u0026nbsp;\u003c/div\u003e\u003cdiv class\u003d\"long\"\u003e\u0026nbsp;\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv id\u003d\"method-loadConfig\" class\u003d\"member  not-inherited\"\u003e\u003ca href\u003d\"#\" class\u003d\"side expandable\"\u003e\u003cspan\u003e\u0026nbsp;\u003c/span\u003e\u003c/a\u003e\u003cdiv class\u003d\"title\"\u003e\u003cdiv class\u003d\"meta\"\u003e\u003cspan class\u003d\"defined-in\" rel\u003d\"Spark.Core.Manager.ConnectionManager\"\u003eSpark.Core.Manager.ConnectionManager\u003c/span\u003e\u003cbr/\u003e\u003c/div\u003e\u003ca href\u003d\"#!/api/Spark.Core.Manager.ConnectionManager-method-loadConfig\" class\u003d\"name expandable\"\u003eloadConfig\u003c/a\u003e()\u003cspan class\u003d\"signature\"\u003e\u003cspan class\u003d\"protected\"\u003ePROTECTED\u003c/span\u003e\u003c/span\u003e\u003c/div\u003e\u003cdiv class\u003d\"description\"\u003e\u003cdiv class\u003d\"short\"\u003e\u0026nbsp;\u003c/div\u003e\u003cdiv class\u003d\"long\"\u003e\u0026nbsp;\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv id\u003d\"method-getConnectionParam\" class\u003d\"member  not-inherited\"\u003e\u003ca href\u003d\"#\" class\u003d\"side expandable\"\u003e\u003cspan\u003e\u0026nbsp;\u003c/span\u003e\u003c/a\u003e\u003cdiv class\u003d\"title\"\u003e\u003cdiv class\u003d\"meta\"\u003e\u003cspan class\u003d\"defined-in\" rel\u003d\"Spark.Core.Manager.ConnectionManager\"\u003eSpark.Core.Manager.ConnectionManager\u003c/span\u003e\u003cbr/\u003e\u003c/div\u003e\u003ca href\u003d\"#!/api/Spark.Core.Manager.ConnectionManager-method-getConnectionParam\" class\u003d\"name expandable\"\u003egetConnectionParam\u003c/a\u003e(CHARACTER, OUTPUT CHARACTER, OUTPUT ILifecycleScope, OUTPUT CHARACTER) : LOGICAL\u003cspan class\u003d\"signature\"\u003e\u003c/span\u003e\u003c/div\u003e\u003cdiv class\u003d\"description\"\u003e\u003cdiv class\u003d\"short\"\u003eReturn the Connection Configuration data\n\u003c/div\u003e\u003cdiv class\u003d\"long\"\u003e\u003cp\u003eReturn the Connection Configuration data\u003c/p\u003e\n\u003c/br\u003e\u003ch3 class\u003d\"pa\"\u003eParameters\u003c/h3\u003e\u003cul\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003epcConnectName\u003c/span\u003e : CHARACTER\u003cdiv class\u003d\"sub-desc\"\u003e\u003cp\u003eThe Connection Name\u003c/p\u003e\n\u003c/div\u003e\u003c/li\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003epcConnectType\u003c/span\u003e : CHARACTER\u003cdiv class\u003d\"sub-desc\"\u003e\u003cp\u003eThe Connection Type\u003c/p\u003e\n\u003c/div\u003e\u003c/li\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003epoLifeCycle\u003c/span\u003e : ILifecycleScope\u003cdiv class\u003d\"sub-desc\"\u003e\u003c/div\u003e\u003c/li\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003epcConnectParam\u003c/span\u003e : CHARACTER\u003cdiv class\u003d\"sub-desc\"\u003e\u003cp\u003eThe Connection Parameters\u003c/p\u003e\n\u003c/div\u003e\u003c/li\u003e\u003c/ul\u003e\u003ch3 class\u003d\"pa\"\u003eReturns\u003c/h3\u003e\u003cul\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003eLOGICAL\u003c/span\u003e\u003cdiv class\u003d\"sub-desc\"\u003eTRUE if the Connection Configuration is found else FALSE\u003c/div\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv id\u003d\"method-getServer\" class\u003d\"member  not-inherited\"\u003e\u003ca href\u003d\"#\" class\u003d\"side expandable\"\u003e\u003cspan\u003e\u0026nbsp;\u003c/span\u003e\u003c/a\u003e\u003cdiv class\u003d\"title\"\u003e\u003cdiv class\u003d\"meta\"\u003e\u003cspan class\u003d\"defined-in\" rel\u003d\"Spark.Core.Manager.ConnectionManager\"\u003eSpark.Core.Manager.ConnectionManager\u003c/span\u003e\u003cbr/\u003e\u003c/div\u003e\u003ca href\u003d\"#!/api/Spark.Core.Manager.ConnectionManager-method-getServer\" class\u003d\"name expandable\"\u003egetServer\u003c/a\u003e(CHARACTER) : HANDLE\u003cspan class\u003d\"signature\"\u003e\u003c/span\u003e\u003c/div\u003e\u003cdiv class\u003d\"description\"\u003e\u003cdiv class\u003d\"short\"\u003eWill return the handle to the requested server.\nIf the server is not connected then this function wi ...\u003c/div\u003e\u003cdiv class\u003d\"long\"\u003e\u003cp\u003eWill return the handle to the requested server.\nIf the server is not connected then this function will create the server and connect it using the parameters supplied in the Config.xml\u003c/p\u003e\n\u003c/br\u003e\u003ch3 class\u003d\"pa\"\u003eParameters\u003c/h3\u003e\u003cul\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003epcConnectName\u003c/span\u003e : CHARACTER\u003cdiv class\u003d\"sub-desc\"\u003e\u003cp\u003eThe Name of the Server to connect to as defined in the Config.xml\u003c/p\u003e\n\u003c/div\u003e\u003c/li\u003e\u003c/ul\u003e\u003ch3 class\u003d\"pa\"\u003eReturns\u003c/h3\u003e\u003cul\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003eHANDLE\u003c/span\u003e\u003cdiv class\u003d\"sub-desc\"\u003eThe Handle to the server\u003c/div\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv id\u003d\"method-stopLifeCycle\" class\u003d\"member  not-inherited\"\u003e\u003ca href\u003d\"#\" class\u003d\"side expandable\"\u003e\u003cspan\u003e\u0026nbsp;\u003c/span\u003e\u003c/a\u003e\u003cdiv class\u003d\"title\"\u003e\u003cdiv class\u003d\"meta\"\u003e\u003cspan class\u003d\"defined-in\" rel\u003d\"Spark.Core.Manager.ConnectionManager\"\u003eSpark.Core.Manager.ConnectionManager\u003c/span\u003e\u003cbr/\u003e\u003c/div\u003e\u003ca href\u003d\"#!/api/Spark.Core.Manager.ConnectionManager-method-stopLifeCycle\" class\u003d\"name expandable\"\u003estopLifeCycle\u003c/a\u003e(ILifecycleScope)\u003cspan class\u003d\"signature\"\u003e\u003c/span\u003e\u003c/div\u003e\u003cdiv class\u003d\"description\"\u003e\u003cdiv class\u003d\"short\"\u003eStops all servers running in a life cycle scope.\n\u003c/div\u003e\u003cdiv class\u003d\"long\"\u003e\u003cp\u003eStops all servers running in a life cycle scope.\u003c/p\u003e\n\u003c/br\u003e\u003ch3 class\u003d\"pa\"\u003eParameters\u003c/h3\u003e\u003cul\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003epoLifeCycle\u003c/span\u003e : ILifecycleScope\u003cdiv class\u003d\"sub-desc\"\u003e\u003cp\u003eThe Life Cycle scope to stop\u003c/p\u003e\n\u003c/div\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv id\u003d\"method-stopServer\" class\u003d\"member  not-inherited\"\u003e\u003ca href\u003d\"#\" class\u003d\"side expandable\"\u003e\u003cspan\u003e\u0026nbsp;\u003c/span\u003e\u003c/a\u003e\u003cdiv class\u003d\"title\"\u003e\u003cdiv class\u003d\"meta\"\u003e\u003cspan class\u003d\"defined-in\" rel\u003d\"Spark.Core.Manager.ConnectionManager\"\u003eSpark.Core.Manager.ConnectionManager\u003c/span\u003e\u003cbr/\u003e\u003c/div\u003e\u003ca href\u003d\"#!/api/Spark.Core.Manager.ConnectionManager-method-stopServer\" class\u003d\"name expandable\"\u003estopServer\u003c/a\u003e(CHARACTER)\u003cspan class\u003d\"signature\"\u003e\u003c/span\u003e\u003c/div\u003e\u003cdiv class\u003d\"description\"\u003e\u003cdiv class\u003d\"short\"\u003eStops a running server.\n\u003c/div\u003e\u003cdiv class\u003d\"long\"\u003e\u003cp\u003eStops a running server.\u003c/p\u003e\n\u003c/br\u003e\u003ch3 class\u003d\"pa\"\u003eParameters\u003c/h3\u003e\u003cul\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003epcServerName\u003c/span\u003e : CHARACTER\u003cdiv class\u003d\"sub-desc\"\u003e\u003cp\u003eServer Name of server to stop\u003c/p\u003e\n\u003c/div\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv id\u003d\"method-reconnectServer\" class\u003d\"member  not-inherited\"\u003e\u003ca href\u003d\"#\" class\u003d\"side expandable\"\u003e\u003cspan\u003e\u0026nbsp;\u003c/span\u003e\u003c/a\u003e\u003cdiv class\u003d\"title\"\u003e\u003cdiv class\u003d\"meta\"\u003e\u003cspan class\u003d\"defined-in\" rel\u003d\"Spark.Core.Manager.ConnectionManager\"\u003eSpark.Core.Manager.ConnectionManager\u003c/span\u003e\u003cbr/\u003e\u003c/div\u003e\u003ca href\u003d\"#!/api/Spark.Core.Manager.ConnectionManager-method-reconnectServer\" class\u003d\"name expandable\"\u003ereconnectServer\u003c/a\u003e(CHARACTER) : HANDLE\u003cspan class\u003d\"signature\"\u003e\u003c/span\u003e\u003c/div\u003e\u003cdiv class\u003d\"description\"\u003e\u003cdiv class\u003d\"short\"\u003eStops and reconnects to a server.\n\u003c/div\u003e\u003cdiv class\u003d\"long\"\u003e\u003cp\u003eStops and reconnects to a server.\u003c/p\u003e\n\u003c/br\u003e\u003ch3 class\u003d\"pa\"\u003eParameters\u003c/h3\u003e\u003cul\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003epcServerName\u003c/span\u003e : CHARACTER\u003cdiv class\u003d\"sub-desc\"\u003e\u003cp\u003eServer Name of server to reconnect\u003c/p\u003e\n\u003c/div\u003e\u003c/li\u003e\u003c/ul\u003e\u003ch3 class\u003d\"pa\"\u003eReturns\u003c/h3\u003e\u003cul\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003eHANDLE\u003c/span\u003e\u003cdiv class\u003d\"sub-desc\"\u003e\u003c/div\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv id\u003d\"method-validContext\" class\u003d\"member  not-inherited\"\u003e\u003ca href\u003d\"#\" class\u003d\"side expandable\"\u003e\u003cspan\u003e\u0026nbsp;\u003c/span\u003e\u003c/a\u003e\u003cdiv class\u003d\"title\"\u003e\u003cdiv class\u003d\"meta\"\u003e\u003cspan class\u003d\"defined-in\" rel\u003d\"Spark.Core.Manager.ConnectionManager\"\u003eSpark.Core.Manager.ConnectionManager\u003c/span\u003e\u003cbr/\u003e\u003c/div\u003e\u003ca href\u003d\"#!/api/Spark.Core.Manager.ConnectionManager-method-validContext\" class\u003d\"name expandable\"\u003evalidContext\u003c/a\u003e(CHARACTER) : LOGICAL\u003cspan class\u003d\"signature\"\u003e\u003c/span\u003e\u003c/div\u003e\u003cdiv class\u003d\"description\"\u003e\u003cdiv class\u003d\"short\"\u003eDetermines if server context has expired.\n\u003c/div\u003e\u003cdiv class\u003d\"long\"\u003e\u003cp\u003eDetermines if server context has expired.\u003c/p\u003e\n\u003c/br\u003e\u003ch3 class\u003d\"pa\"\u003eParameters\u003c/h3\u003e\u003cul\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003epcServerName\u003c/span\u003e : CHARACTER\u003cdiv class\u003d\"sub-desc\"\u003e\u003cp\u003eServer Name of server to check\u003c/p\u003e\n\u003c/div\u003e\u003c/li\u003e\u003c/ul\u003e\u003ch3 class\u003d\"pa\"\u003eReturns\u003c/h3\u003e\u003cul\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003eLOGICAL\u003c/span\u003e\u003cdiv class\u003d\"sub-desc\"\u003e\u003c/div\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv id\u003d\"method-getProcHandle\" class\u003d\"member  not-inherited\"\u003e\u003ca href\u003d\"#\" class\u003d\"side expandable\"\u003e\u003cspan\u003e\u0026nbsp;\u003c/span\u003e\u003c/a\u003e\u003cdiv class\u003d\"title\"\u003e\u003cdiv class\u003d\"meta\"\u003e\u003cspan class\u003d\"defined-in\" rel\u003d\"Spark.Core.Manager.ConnectionManager\"\u003eSpark.Core.Manager.ConnectionManager\u003c/span\u003e\u003cbr/\u003e\u003c/div\u003e\u003ca href\u003d\"#!/api/Spark.Core.Manager.ConnectionManager-method-getProcHandle\" class\u003d\"name expandable\"\u003egetProcHandle\u003c/a\u003e(CHARACTER, CHARACTER) : HANDLE\u003cspan class\u003d\"signature\"\u003e\u003c/span\u003e\u003c/div\u003e\u003cdiv class\u003d\"description\"\u003e\u003cdiv class\u003d\"short\"\u003eGet a singleton procedure handle on a given server.\n\u003c/div\u003e\u003cdiv class\u003d\"long\"\u003e\u003cp\u003eGet a singleton procedure handle on a given server.\u003c/p\u003e\n\u003c/br\u003e\u003ch3 class\u003d\"pa\"\u003eParameters\u003c/h3\u003e\u003cul\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003epcServerName\u003c/span\u003e : CHARACTER\u003cdiv class\u003d\"sub-desc\"\u003e\u003cp\u003eServer Name of server to set\u003c/p\u003e\n\u003c/div\u003e\u003c/li\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003epcProcName\u003c/span\u003e : CHARACTER\u003cdiv class\u003d\"sub-desc\"\u003e\u003c/div\u003e\u003c/li\u003e\u003c/ul\u003e\u003ch3 class\u003d\"pa\"\u003eReturns\u003c/h3\u003e\u003cul\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003eHANDLE\u003c/span\u003e\u003cdiv class\u003d\"sub-desc\"\u003e\u003c/div\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv id\u003d\"method-initialize\" class\u003d\"member  inherited\"\u003e\u003ca href\u003d\"#\" class\u003d\"side expandable\"\u003e\u003cspan\u003e\u0026nbsp;\u003c/span\u003e\u003c/a\u003e\u003cdiv class\u003d\"title\"\u003e\u003cdiv class\u003d\"meta\"\u003e\u003cspan class\u003d\"defined-in\" rel\u003d\"Spark.Core.Service.Service\"\u003eSpark.Core.Service.Service\u003c/span\u003e\u003cbr/\u003e\u003c/div\u003e\u003ca href\u003d\"#!/api/Spark.Core.Manager.ConnectionManager-method-initialize\" class\u003d\"name expandable\"\u003einitialize\u003c/a\u003e()\u003cspan class\u003d\"signature\"\u003e\u003cspan class\u003d\"abstract\"\u003eABSTRACT\u003c/span\u003e\u003c/span\u003e\u003c/div\u003e\u003cdiv class\u003d\"description\"\u003e\u003cdiv class\u003d\"short\"\u003eInitializer/Startup\n\u003c/div\u003e\u003cdiv class\u003d\"long\"\u003e\u003cp\u003eInitializer/Startup\u003c/p\u003e\n\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv id\u003d\"method-dispose\" class\u003d\"member  inherited\"\u003e\u003ca href\u003d\"#\" class\u003d\"side expandable\"\u003e\u003cspan\u003e\u0026nbsp;\u003c/span\u003e\u003c/a\u003e\u003cdiv class\u003d\"title\"\u003e\u003cdiv class\u003d\"meta\"\u003e\u003cspan class\u003d\"defined-in\" rel\u003d\"Spark.Core.Service.Service\"\u003eSpark.Core.Service.Service\u003c/span\u003e\u003cbr/\u003e\u003c/div\u003e\u003ca href\u003d\"#!/api/Spark.Core.Manager.ConnectionManager-method-dispose\" class\u003d\"name expandable\"\u003edispose\u003c/a\u003e()\u003cspan class\u003d\"signature\"\u003e\u003cspan class\u003d\"abstract\"\u003eABSTRACT\u003c/span\u003e\u003c/span\u003e\u003c/div\u003e\u003cdiv class\u003d\"description\"\u003e\u003cdiv class\u003d\"short\"\u003eDestroy/Shutdown/Anti-Initializer\n\u003c/div\u003e\u003cdiv class\u003d\"long\"\u003e\u003cp\u003eDestroy/Shutdown/Anti-Initializer\u003c/p\u003e\n\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e","classIcon":"class","members":[{"id":"constructor-ConnectionManager1","name":"ConnectionManager","owner":"Spark.Core.Manager.ConnectionManager","tagname":"constructor","signature":"ConnectionManager()","returnComment":"","meta":{}},{"id":"method-initialize","name":"initialize","owner":"Spark.Core.Manager.ConnectionManager","tagname":"method","signature":"initialize()","returnComment":"","meta":{}},{"id":"method-dispose","name":"dispose","owner":"Spark.Core.Manager.ConnectionManager","tagname":"method","signature":"dispose()","returnComment":"","meta":{}},{"id":"method-loadConfig","name":"loadConfig","owner":"Spark.Core.Manager.ConnectionManager","tagname":"method","signature":"loadConfig()","returnComment":"","meta":{"protected":true}},{"id":"method-getConnectionParam","name":"getConnectionParam","owner":"Spark.Core.Manager.ConnectionManager","tagname":"method","signature":"getConnectionParam(INPUT:character,OUTPUT:character,OUTPUT:ILifecycleScope,OUTPUT:character):LOGICAL","returnComment":"TRUE if the Connection Configuration is found else FALSE","meta":{}},{"id":"method-getServer","name":"getServer","owner":"Spark.Core.Manager.ConnectionManager","tagname":"method","signature":"getServer(INPUT:character):HANDLE","returnComment":"The Handle to the server","meta":{}},{"id":"method-stopLifeCycle","name":"stopLifeCycle","owner":"Spark.Core.Manager.ConnectionManager","tagname":"method","signature":"stopLifeCycle(INPUT:ILifecycleScope)","returnComment":"","meta":{}},{"id":"method-stopServer","name":"stopServer","owner":"Spark.Core.Manager.ConnectionManager","tagname":"method","signature":"stopServer(INPUT:character)","returnComment":"","meta":{}},{"id":"method-reconnectServer","name":"reconnectServer","owner":"Spark.Core.Manager.ConnectionManager","tagname":"method","signature":"reconnectServer(INPUT:character):HANDLE","returnComment":"","meta":{}},{"id":"method-validContext","name":"validContext","owner":"Spark.Core.Manager.ConnectionManager","tagname":"method","signature":"validContext(INPUT:character):LOGICAL","returnComment":"","meta":{}},{"id":"method-getProcHandle","name":"getProcHandle","owner":"Spark.Core.Manager.ConnectionManager","tagname":"method","signature":"getProcHandle(INPUT:character,INPUT:character):HANDLE","returnComment":"","meta":{}},{"id":"property-oLoggingManager","name":"oLoggingManager","owner":"Spark.Core.Manager.ConnectionManager","tagname":"property","datatype":"ILoggingManager","meta":{"protected":true}},{"id":"method-initialize","name":"initialize","owner":"Spark.Core.Service.Service","tagname":"method","signature":"initialize()","returnComment":"","meta":{"abstract":true}},{"id":"method-dispose","name":"dispose","owner":"Spark.Core.Service.Service","tagname":"method","signature":"dispose()","returnComment":"","meta":{"abstract":true}}],"superclasses":["Spark.Core.Service.Service","Spark.Core.Manager.Manager","Spark.Core.Manager.ConnectionManager"],"subclasses":[],"meta":{}});