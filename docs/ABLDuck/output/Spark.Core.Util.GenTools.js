Ext.data.JsonP.Spark_Core_Util_GenTools({"mixedInto":[],"parentMixins":[],"files":[],"alternateClassNames":[],"mixins":[],"requires":[],"uses":[],"aliases":{},"id":"class-Spark.Core.Util.GenTools","tagname":"class","name":"Spark.Core.Util.GenTools","extends":"","author":"","shortDoc":"","html":"\u003cdiv\u003e\u003cdiv class\u003d\"doc-contents\"\u003e\u003cp\u003eA static class with general helper methods\u003c/p\u003e\n\u003c/div\u003e\u003cdiv class\u003d\"members\"\u003e\u003cdiv class\u003d\"members-section\"\u003e\u003cdiv class\u003d\"definedBy\"\u003eDefined By\u003c/div\u003e\u003ch3 class\u003d\"members-title icon-constructor\"\u003eConstructors\u003c/h3\u003e\u003cdiv class\u003d\"subsection\"\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv class\u003d\"members-section\"\u003e\u003cdiv class\u003d\"definedBy\"\u003eDefined By\u003c/div\u003e\u003ch3 class\u003d\"members-title icon-event\"\u003eEvents\u003c/h3\u003e\u003cdiv class\u003d\"subsection\"\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv class\u003d\"members-section\"\u003e\u003cdiv class\u003d\"definedBy\"\u003eDefined By\u003c/div\u003e\u003ch3 class\u003d\"members-title icon-property\"\u003eProperties\u003c/h3\u003e\u003cdiv class\u003d\"subsection\"\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv class\u003d\"members-section\"\u003e\u003cdiv class\u003d\"definedBy\"\u003eDefined By\u003c/div\u003e\u003ch3 class\u003d\"members-title icon-method\"\u003eMethods\u003c/h3\u003e\u003cdiv class\u003d\"subsection\"\u003e\u003cdiv id\u003d\"method-getAblError\" class\u003d\"member first-child not-inherited\"\u003e\u003ca href\u003d\"#\" class\u003d\"side expandable\"\u003e\u003cspan\u003e\u0026nbsp;\u003c/span\u003e\u003c/a\u003e\u003cdiv class\u003d\"title\"\u003e\u003cdiv class\u003d\"meta\"\u003e\u003cspan class\u003d\"defined-in\" rel\u003d\"Spark.Core.Util.GenTools\"\u003eSpark.Core.Util.GenTools\u003c/span\u003e\u003cbr/\u003e\u003c/div\u003e\u003ca href\u003d\"#!/api/Spark.Core.Util.GenTools-method-getAblError\" class\u003d\"name expandable\"\u003egetAblError\u003c/a\u003e() : CHARACTER\u003cspan class\u003d\"signature\"\u003e\u003cspan class\u003d\"static\"\u003eSTATIC\u003c/span\u003e\u003c/span\u003e\u003c/div\u003e\u003cdiv class\u003d\"description\"\u003e\u003cdiv class\u003d\"short\"\u003eReturns a concatenated error message associated with a specified error currently recorded by error-s ...\u003c/div\u003e\u003cdiv class\u003d\"long\"\u003e\u003cp\u003eReturns a concatenated error message associated with a specified error currently recorded by error-status system handle.\u003c/p\u003e\n\u003ch3 class\u003d\"pa\"\u003eReturns\u003c/h3\u003e\u003cul\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003eCHARACTER\u003c/span\u003e\u003cdiv class\u003d\"sub-desc\"\u003e\u003c/div\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv id\u003d\"method-getLastAblError\" class\u003d\"member  not-inherited\"\u003e\u003ca href\u003d\"#\" class\u003d\"side expandable\"\u003e\u003cspan\u003e\u0026nbsp;\u003c/span\u003e\u003c/a\u003e\u003cdiv class\u003d\"title\"\u003e\u003cdiv class\u003d\"meta\"\u003e\u003cspan class\u003d\"defined-in\" rel\u003d\"Spark.Core.Util.GenTools\"\u003eSpark.Core.Util.GenTools\u003c/span\u003e\u003cbr/\u003e\u003c/div\u003e\u003ca href\u003d\"#!/api/Spark.Core.Util.GenTools-method-getLastAblError\" class\u003d\"name expandable\"\u003egetLastAblError\u003c/a\u003e() : CHARACTER\u003cspan class\u003d\"signature\"\u003e\u003cspan class\u003d\"static\"\u003eSTATIC\u003c/span\u003e\u003c/span\u003e\u003c/div\u003e\u003cdiv class\u003d\"description\"\u003e\u003cdiv class\u003d\"short\"\u003eReturn the last ABL runtime error message and number\nSee: http://knowledgebase.progress.com/articles ...\u003c/div\u003e\u003cdiv class\u003d\"long\"\u003e\u003cp\u003eReturn the last ABL runtime error message and number\nSee: http://knowledgebase.progress.com/articles/Article/P82729\nThe _MSG function returns the error/warning message specified by its integer parameter\nfrom the current Progress session\u0027s error/warning message stack\u003c/p\u003e\n\u003ch3 class\u003d\"pa\"\u003eReturns\u003c/h3\u003e\u003cul\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003eCHARACTER\u003c/span\u003e\u003cdiv class\u003d\"sub-desc\"\u003e\u003c/div\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv id\u003d\"method-getDateTime\" class\u003d\"member  not-inherited\"\u003e\u003ca href\u003d\"#\" class\u003d\"side expandable\"\u003e\u003cspan\u003e\u0026nbsp;\u003c/span\u003e\u003c/a\u003e\u003cdiv class\u003d\"title\"\u003e\u003cdiv class\u003d\"meta\"\u003e\u003cspan class\u003d\"defined-in\" rel\u003d\"Spark.Core.Util.GenTools\"\u003eSpark.Core.Util.GenTools\u003c/span\u003e\u003cbr/\u003e\u003c/div\u003e\u003ca href\u003d\"#!/api/Spark.Core.Util.GenTools-method-getDateTime\" class\u003d\"name expandable\"\u003egetDateTime\u003c/a\u003e(DATE, INTEGER) : DATETIME\u003cspan class\u003d\"signature\"\u003e\u003cspan class\u003d\"static\"\u003eSTATIC\u003c/span\u003e\u003c/span\u003e\u003c/div\u003e\u003cdiv class\u003d\"description\"\u003e\u003cdiv class\u003d\"short\"\u003eConvert separate date and time values into a single datetime value\n\u003c/div\u003e\u003cdiv class\u003d\"long\"\u003e\u003cp\u003eConvert separate date and time values into a single datetime value\u003c/p\u003e\n\u003c/br\u003e\u003ch3 class\u003d\"pa\"\u003eParameters\u003c/h3\u003e\u003cul\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003epdDate\u003c/span\u003e : DATE\u003cdiv class\u003d\"sub-desc\"\u003e\u003cp\u003eStandard date in ABL (eg. TODAY)\u003c/p\u003e\n\u003c/div\u003e\u003c/li\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003epiTime\u003c/span\u003e : INTEGER\u003cdiv class\u003d\"sub-desc\"\u003e\u003cp\u003eTime since midnight, in seconds (eg. TIME)\u003c/p\u003e\n\u003c/div\u003e\u003c/li\u003e\u003c/ul\u003e\u003ch3 class\u003d\"pa\"\u003eReturns\u003c/h3\u003e\u003cul\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003eDATETIME\u003c/span\u003e\u003cdiv class\u003d\"sub-desc\"\u003e\u003c/div\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv id\u003d\"method-getLocalTimeZoneOffset\" class\u003d\"member  not-inherited\"\u003e\u003ca href\u003d\"#\" class\u003d\"side expandable\"\u003e\u003cspan\u003e\u0026nbsp;\u003c/span\u003e\u003c/a\u003e\u003cdiv class\u003d\"title\"\u003e\u003cdiv class\u003d\"meta\"\u003e\u003cspan class\u003d\"defined-in\" rel\u003d\"Spark.Core.Util.GenTools\"\u003eSpark.Core.Util.GenTools\u003c/span\u003e\u003cbr/\u003e\u003c/div\u003e\u003ca href\u003d\"#!/api/Spark.Core.Util.GenTools-method-getLocalTimeZoneOffset\" class\u003d\"name expandable\"\u003egetLocalTimeZoneOffset\u003c/a\u003e(CHARACTER) : INTEGER\u003cspan class\u003d\"signature\"\u003e\u003cspan class\u003d\"static\"\u003eSTATIC\u003c/span\u003e\u003c/span\u003e\u003c/div\u003e\u003cdiv class\u003d\"description\"\u003e\u003cdiv class\u003d\"short\"\u003eGet the timezone offset for a region including the daylight savings offset\n\u003c/div\u003e\u003cdiv class\u003d\"long\"\u003e\u003cp\u003eGet the timezone offset for a region including the daylight savings offset\u003c/p\u003e\n\u003c/br\u003e\u003ch3 class\u003d\"pa\"\u003eParameters\u003c/h3\u003e\u003cul\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003epcTZ\u003c/span\u003e : CHARACTER\u003cdiv class\u003d\"sub-desc\"\u003e\u003cp\u003eTimezone region e.g. Australia/Sydney\u003c/p\u003e\n\u003c/div\u003e\u003c/li\u003e\u003c/ul\u003e\u003ch3 class\u003d\"pa\"\u003eReturns\u003c/h3\u003e\u003cul\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003eINTEGER\u003c/span\u003e\u003cdiv class\u003d\"sub-desc\"\u003e\u003c/div\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv id\u003d\"method-getLocalTimeZoneOffset-1\" class\u003d\"member  not-inherited\"\u003e\u003ca href\u003d\"#\" class\u003d\"side expandable\"\u003e\u003cspan\u003e\u0026nbsp;\u003c/span\u003e\u003c/a\u003e\u003cdiv class\u003d\"title\"\u003e\u003cdiv class\u003d\"meta\"\u003e\u003cspan class\u003d\"defined-in\" rel\u003d\"Spark.Core.Util.GenTools\"\u003eSpark.Core.Util.GenTools\u003c/span\u003e\u003cbr/\u003e\u003c/div\u003e\u003ca href\u003d\"#!/api/Spark.Core.Util.GenTools-method-getLocalTimeZoneOffset-1\" class\u003d\"name expandable\"\u003egetLocalTimeZoneOffset\u003c/a\u003e(CHARACTER, DATETIME-TZ) : INTEGER\u003cspan class\u003d\"signature\"\u003e\u003cspan class\u003d\"static\"\u003eSTATIC\u003c/span\u003e\u003c/span\u003e\u003c/div\u003e\u003cdiv class\u003d\"description\"\u003e\u003cdiv class\u003d\"short\"\u003eGet the timezone offset for a region including the daylight savings offset\n\u003c/div\u003e\u003cdiv class\u003d\"long\"\u003e\u003cp\u003eGet the timezone offset for a region including the daylight savings offset\u003c/p\u003e\n\u003c/br\u003e\u003ch3 class\u003d\"pa\"\u003eParameters\u003c/h3\u003e\u003cul\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003epcTZ\u003c/span\u003e : CHARACTER\u003cdiv class\u003d\"sub-desc\"\u003e\u003cp\u003eTimezone region e.g. Australia/Sydney\u003c/p\u003e\n\u003c/div\u003e\u003c/li\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003eptAsAtDatetime\u003c/span\u003e : DATETIME-TZ\u003cdiv class\u003d\"sub-desc\"\u003e\u003cp\u003eDatetime to return the offset for\u003c/p\u003e\n\u003c/div\u003e\u003c/li\u003e\u003c/ul\u003e\u003ch3 class\u003d\"pa\"\u003eReturns\u003c/h3\u003e\u003cul\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003eINTEGER\u003c/span\u003e\u003cdiv class\u003d\"sub-desc\"\u003e\u003c/div\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv id\u003d\"method-encodeURL\" class\u003d\"member  not-inherited\"\u003e\u003ca href\u003d\"#\" class\u003d\"side expandable\"\u003e\u003cspan\u003e\u0026nbsp;\u003c/span\u003e\u003c/a\u003e\u003cdiv class\u003d\"title\"\u003e\u003cdiv class\u003d\"meta\"\u003e\u003cspan class\u003d\"defined-in\" rel\u003d\"Spark.Core.Util.GenTools\"\u003eSpark.Core.Util.GenTools\u003c/span\u003e\u003cbr/\u003e\u003c/div\u003e\u003ca href\u003d\"#!/api/Spark.Core.Util.GenTools-method-encodeURL\" class\u003d\"name expandable\"\u003eencodeURL\u003c/a\u003e(CHARACTER) : CHARACTER\u003cspan class\u003d\"signature\"\u003e\u003cspan class\u003d\"static\"\u003eSTATIC\u003c/span\u003e\u003c/span\u003e\u003c/div\u003e\u003cdiv class\u003d\"description\"\u003e\u003cdiv class\u003d\"short\"\u003eEncodes unsafe characters in a URL as per RFC 1738 section 2.2.\nURL:http://ds.internic.net/rfc/rfc17 ...\u003c/div\u003e\u003cdiv class\u003d\"long\"\u003e\u003cp\u003eEncodes unsafe characters in a URL as per RFC 1738 section 2.2.\n\u003ca href\u003d\"URL:http://ds.internic.net/rfc/rfc1738.txt\"\u003eURL:http://ds.internic.net/rfc/rfc1738.txt\u003c/a\u003e, 2.2\nThe following code is derived from the URL-ENCODE function in src/web/method/cgi-utils.\u003c/p\u003e\n\u003c/br\u003e\u003ch3 class\u003d\"pa\"\u003eParameters\u003c/h3\u003e\u003cul\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003epcValue\u003c/span\u003e : CHARACTER\u003cdiv class\u003d\"sub-desc\"\u003e\u003cp\u003eThe value to encode\u003c/p\u003e\n\u003c/div\u003e\u003c/li\u003e\u003c/ul\u003e\u003ch3 class\u003d\"pa\"\u003eReturns\u003c/h3\u003e\u003cul\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003eCHARACTER\u003c/span\u003e\u003cdiv class\u003d\"sub-desc\"\u003eEncoded string (unkown value is returned as blank)\u003c/div\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv id\u003d\"method-encodeURL-1\" class\u003d\"member  not-inherited\"\u003e\u003ca href\u003d\"#\" class\u003d\"side expandable\"\u003e\u003cspan\u003e\u0026nbsp;\u003c/span\u003e\u003c/a\u003e\u003cdiv class\u003d\"title\"\u003e\u003cdiv class\u003d\"meta\"\u003e\u003cspan class\u003d\"defined-in\" rel\u003d\"Spark.Core.Util.GenTools\"\u003eSpark.Core.Util.GenTools\u003c/span\u003e\u003cbr/\u003e\u003c/div\u003e\u003ca href\u003d\"#!/api/Spark.Core.Util.GenTools-method-encodeURL-1\" class\u003d\"name expandable\"\u003eencodeURL\u003c/a\u003e(CHARACTER, CHARACTER) : CHARACTER\u003cspan class\u003d\"signature\"\u003e\u003cspan class\u003d\"static\"\u003eSTATIC\u003c/span\u003e\u003c/span\u003e\u003c/div\u003e\u003cdiv class\u003d\"description\"\u003e\u003cdiv class\u003d\"short\"\u003eEncodes unsafe characters in a URL as per RFC 1738 section 2.2.\nURL:http://ds.internic.net/rfc/rfc17 ...\u003c/div\u003e\u003cdiv class\u003d\"long\"\u003e\u003cp\u003eEncodes unsafe characters in a URL as per RFC 1738 section 2.2.\n\u003ca href\u003d\"URL:http://ds.internic.net/rfc/rfc1738.txt\"\u003eURL:http://ds.internic.net/rfc/rfc1738.txt\u003c/a\u003e, 2.2\nThe following code is derived from the URL-ENCODE function in src/web/method/cgi-utils.\u003c/p\u003e\n\u003c/br\u003e\u003ch3 class\u003d\"pa\"\u003eParameters\u003c/h3\u003e\u003cul\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003epcValue\u003c/span\u003e : CHARACTER\u003cdiv class\u003d\"sub-desc\"\u003e\u003cp\u003eThe value to encode\u003c/p\u003e\n\u003c/div\u003e\u003c/li\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003epcEncodeType\u003c/span\u003e : CHARACTER\u003cdiv class\u003d\"sub-desc\"\u003e\u003cp\u003eThe encoding option where \u0026quot;query\u0026quot;, \u0026quot;cookie\u0026quot;, \u0026quot;default\u0026quot; or any specified string of characters are valid.\u003c/p\u003e\n\u003c/div\u003e\u003c/li\u003e\u003c/ul\u003e\u003ch3 class\u003d\"pa\"\u003eReturns\u003c/h3\u003e\u003cul\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003eCHARACTER\u003c/span\u003e\u003cdiv class\u003d\"sub-desc\"\u003eEncoded string (unkown value is returned as blank)\u003c/div\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e","classIcon":"class","members":[{"id":"method-getAblError","name":"getAblError","owner":"Spark.Core.Util.GenTools","tagname":"method","signature":"getAblError():CHARACTER","returnComment":"","meta":{"static":true}},{"id":"method-getLastAblError","name":"getLastAblError","owner":"Spark.Core.Util.GenTools","tagname":"method","signature":"getLastAblError():CHARACTER","returnComment":"","meta":{"static":true}},{"id":"method-getDateTime","name":"getDateTime","owner":"Spark.Core.Util.GenTools","tagname":"method","signature":"getDateTime(INPUT:date,INPUT:integer):DATETIME","returnComment":"","meta":{"static":true}},{"id":"method-getLocalTimeZoneOffset","name":"getLocalTimeZoneOffset","owner":"Spark.Core.Util.GenTools","tagname":"method","signature":"getLocalTimeZoneOffset(INPUT:character):INTEGER","returnComment":"","meta":{"static":true}},{"id":"method-getLocalTimeZoneOffset-1","name":"getLocalTimeZoneOffset","owner":"Spark.Core.Util.GenTools","tagname":"method","signature":"getLocalTimeZoneOffset(INPUT:character,INPUT:datetime-tz):INTEGER","returnComment":"","meta":{"static":true}},{"id":"method-encodeURL","name":"encodeURL","owner":"Spark.Core.Util.GenTools","tagname":"method","signature":"encodeURL(INPUT:character):CHARACTER","returnComment":"Encoded string (unkown value is returned as blank)","meta":{"static":true}},{"id":"method-encodeURL-1","name":"encodeURL","owner":"Spark.Core.Util.GenTools","tagname":"method","signature":"encodeURL(INPUT:character,INPUT:character):CHARACTER","returnComment":"Encoded string (unkown value is returned as blank)","meta":{"static":true}}],"superclasses":[],"subclasses":[],"meta":{}});