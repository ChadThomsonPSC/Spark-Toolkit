Ext.data.JsonP.Spark_Core_Util_CryptoTools({"mixedInto":[],"parentMixins":[],"files":[],"alternateClassNames":[],"mixins":[],"requires":[],"uses":[],"aliases":{},"id":"class-Spark.Core.Util.CryptoTools","tagname":"class","name":"Spark.Core.Util.CryptoTools","extends":"","author":"","shortDoc":"","html":"\u003cdiv\u003e\u003cdiv class\u003d\"doc-contents\"\u003e\u003cp\u003eA static class with cryptology helper methods\u003c/p\u003e\n\u003c/div\u003e\u003cdiv class\u003d\"members\"\u003e\u003cdiv class\u003d\"members-section\"\u003e\u003cdiv class\u003d\"definedBy\"\u003eDefined By\u003c/div\u003e\u003ch3 class\u003d\"members-title icon-constructor\"\u003eConstructors\u003c/h3\u003e\u003cdiv class\u003d\"subsection\"\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv class\u003d\"members-section\"\u003e\u003cdiv class\u003d\"definedBy\"\u003eDefined By\u003c/div\u003e\u003ch3 class\u003d\"members-title icon-event\"\u003eEvents\u003c/h3\u003e\u003cdiv class\u003d\"subsection\"\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv class\u003d\"members-section\"\u003e\u003cdiv class\u003d\"definedBy\"\u003eDefined By\u003c/div\u003e\u003ch3 class\u003d\"members-title icon-property\"\u003eProperties\u003c/h3\u003e\u003cdiv class\u003d\"subsection\"\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv class\u003d\"members-section\"\u003e\u003cdiv class\u003d\"definedBy\"\u003eDefined By\u003c/div\u003e\u003ch3 class\u003d\"members-title icon-method\"\u003eMethods\u003c/h3\u003e\u003cdiv class\u003d\"subsection\"\u003e\u003cdiv id\u003d\"method-encryptCode\" class\u003d\"member first-child not-inherited\"\u003e\u003ca href\u003d\"#\" class\u003d\"side expandable\"\u003e\u003cspan\u003e\u0026nbsp;\u003c/span\u003e\u003c/a\u003e\u003cdiv class\u003d\"title\"\u003e\u003cdiv class\u003d\"meta\"\u003e\u003cspan class\u003d\"defined-in\" rel\u003d\"Spark.Core.Util.CryptoTools\"\u003eSpark.Core.Util.CryptoTools\u003c/span\u003e\u003cbr/\u003e\u003c/div\u003e\u003ca href\u003d\"#!/api/Spark.Core.Util.CryptoTools-method-encryptCode\" class\u003d\"name expandable\"\u003eencryptCode\u003c/a\u003e( LONGCHAR,  CHARACTER,  RAW,  \u003ca href\u003d\"#!/api/Spark.Core.Util.CryptoEncryptAlgorithmEnum\" rel\u003d\"Spark.Core.Util.CryptoEncryptAlgorithmEnum\" class\u003d\"docClass\"\u003eCryptoEncryptAlgorithmEnum\u003c/a\u003e,  \u003ca href\u003d\"#!/api/Spark.Core.Util.CryptoPbeHashAlgorithmEnum\" rel\u003d\"Spark.Core.Util.CryptoPbeHashAlgorithmEnum\" class\u003d\"docClass\"\u003eCryptoPbeHashAlgorithmEnum\u003c/a\u003e) : LONGCHAR\u003cspan class\u003d\"signature\"\u003e\u003cspan class\u003d\"private\"\u003ePRIVATE\u003c/span\u003e\u003cspan class\u003d\"static\"\u003eSTATIC\u003c/span\u003e\u003c/span\u003e\u003c/div\u003e\u003cdiv class\u003d\"description\"\u003e\u003cdiv class\u003d\"short\"\u003eReturns a base64 encoded encrypted string of a supplied character string\n\u003c/div\u003e\u003cdiv class\u003d\"long\"\u003e\u003cp\u003eReturns a base64 encoded encrypted string of a supplied character string\u003c/p\u003e\n\u003c/br\u003e\u003ch3 class\u003d\"pa\"\u003eParameters\u003c/h3\u003e\u003cul\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003epcValue\u003c/span\u003e : LONGCHAR\u003cdiv class\u003d\"sub-desc\"\u003e\u003cp\u003eData to be encrypted\u003c/p\u003e\n\u003c/div\u003e\u003c/li\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003epcPasswordKey\u003c/span\u003e : CHARACTER\u003cdiv class\u003d\"sub-desc\"\u003e\u003cp\u003ethe password used to generate the encryption key\u003c/p\u003e\n\u003c/div\u003e\u003c/li\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003eprInitVector\u003c/span\u003e : RAW\u003cdiv class\u003d\"sub-desc\"\u003e\u003cp\u003eAn optional expression that evaluates to an initialization vector value\u003c/p\u003e\n\u003c/div\u003e\u003c/li\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003epoCryptoEncryptAlgorithmEnum\u003c/span\u003e : \u003ca href\u003d\"#!/api/Spark.Core.Util.CryptoEncryptAlgorithmEnum\" rel\u003d\"Spark.Core.Util.CryptoEncryptAlgorithmEnum\" class\u003d\"docClass\"\u003eCryptoEncryptAlgorithmEnum\u003c/a\u003e\u003cdiv class\u003d\"sub-desc\"\u003e\u003cp\u003ethe name of the symmetric cryptographic algorithm to use\u003c/p\u003e\n\u003c/div\u003e\u003c/li\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003epoCryptoPbeHashAlgorithmEnum\u003c/span\u003e : \u003ca href\u003d\"#!/api/Spark.Core.Util.CryptoPbeHashAlgorithmEnum\" rel\u003d\"Spark.Core.Util.CryptoPbeHashAlgorithmEnum\" class\u003d\"docClass\"\u003eCryptoPbeHashAlgorithmEnum\u003c/a\u003e\u003cdiv class\u003d\"sub-desc\"\u003e\u003cp\u003ethe name of the pbe hash algorithm to use\u003c/p\u003e\n\u003c/div\u003e\u003c/li\u003e\u003c/ul\u003e\u003ch3 class\u003d\"pa\"\u003eReturns\u003c/h3\u003e\u003cul\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003eLONGCHAR\u003c/span\u003e\u003cdiv class\u003d\"sub-desc\"\u003e\u003c/div\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv id\u003d\"method-encryptCode-1\" class\u003d\"member  not-inherited\"\u003e\u003ca href\u003d\"#\" class\u003d\"side expandable\"\u003e\u003cspan\u003e\u0026nbsp;\u003c/span\u003e\u003c/a\u003e\u003cdiv class\u003d\"title\"\u003e\u003cdiv class\u003d\"meta\"\u003e\u003cspan class\u003d\"defined-in\" rel\u003d\"Spark.Core.Util.CryptoTools\"\u003eSpark.Core.Util.CryptoTools\u003c/span\u003e\u003cbr/\u003e\u003c/div\u003e\u003ca href\u003d\"#!/api/Spark.Core.Util.CryptoTools-method-encryptCode-1\" class\u003d\"name expandable\"\u003eencryptCode\u003c/a\u003e( LONGCHAR,  RAW,  RAW,  \u003ca href\u003d\"#!/api/Spark.Core.Util.CryptoEncryptAlgorithmEnum\" rel\u003d\"Spark.Core.Util.CryptoEncryptAlgorithmEnum\" class\u003d\"docClass\"\u003eCryptoEncryptAlgorithmEnum\u003c/a\u003e) : LONGCHAR\u003cspan class\u003d\"signature\"\u003e\u003cspan class\u003d\"private\"\u003ePRIVATE\u003c/span\u003e\u003cspan class\u003d\"static\"\u003eSTATIC\u003c/span\u003e\u003c/span\u003e\u003c/div\u003e\u003cdiv class\u003d\"description\"\u003e\u003cdiv class\u003d\"short\"\u003eReturns the base64 encoded encrypted string of a supplied character string\n\u003c/div\u003e\u003cdiv class\u003d\"long\"\u003e\u003cp\u003eReturns the base64 encoded encrypted string of a supplied character string\u003c/p\u003e\n\u003c/br\u003e\u003ch3 class\u003d\"pa\"\u003eParameters\u003c/h3\u003e\u003cul\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003epcValue\u003c/span\u003e : LONGCHAR\u003cdiv class\u003d\"sub-desc\"\u003e\u003cp\u003eData to be encrypted\u003c/p\u003e\n\u003c/div\u003e\u003c/li\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003eprKey\u003c/span\u003e : RAW\u003cdiv class\u003d\"sub-desc\"\u003e\u003cp\u003ethe encryption key\u003c/p\u003e\n\u003c/div\u003e\u003c/li\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003eprInitVector\u003c/span\u003e : RAW\u003cdiv class\u003d\"sub-desc\"\u003e\u003cp\u003eAn optional expression that evaluates to an initialization vector value\u003c/p\u003e\n\u003c/div\u003e\u003c/li\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003epoCryptoEncryptAlgorithmEnum\u003c/span\u003e : \u003ca href\u003d\"#!/api/Spark.Core.Util.CryptoEncryptAlgorithmEnum\" rel\u003d\"Spark.Core.Util.CryptoEncryptAlgorithmEnum\" class\u003d\"docClass\"\u003eCryptoEncryptAlgorithmEnum\u003c/a\u003e\u003cdiv class\u003d\"sub-desc\"\u003e\u003cp\u003ethe name of the symmetric cryptographic algorithm to use\u003c/p\u003e\n\u003c/div\u003e\u003c/li\u003e\u003c/ul\u003e\u003ch3 class\u003d\"pa\"\u003eReturns\u003c/h3\u003e\u003cul\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003eLONGCHAR\u003c/span\u003e\u003cdiv class\u003d\"sub-desc\"\u003e\u003c/div\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv id\u003d\"method-encryptValue\" class\u003d\"member  not-inherited\"\u003e\u003ca href\u003d\"#\" class\u003d\"side expandable\"\u003e\u003cspan\u003e\u0026nbsp;\u003c/span\u003e\u003c/a\u003e\u003cdiv class\u003d\"title\"\u003e\u003cdiv class\u003d\"meta\"\u003e\u003cspan class\u003d\"defined-in\" rel\u003d\"Spark.Core.Util.CryptoTools\"\u003eSpark.Core.Util.CryptoTools\u003c/span\u003e\u003cbr/\u003e\u003c/div\u003e\u003ca href\u003d\"#!/api/Spark.Core.Util.CryptoTools-method-encryptValue\" class\u003d\"name expandable\"\u003eencryptValue\u003c/a\u003e( MEMPTR,  RAW,  RAW,  \u003ca href\u003d\"#!/api/Spark.Core.Util.CryptoEncryptAlgorithmEnum\" rel\u003d\"Spark.Core.Util.CryptoEncryptAlgorithmEnum\" class\u003d\"docClass\"\u003eCryptoEncryptAlgorithmEnum\u003c/a\u003e) : MEMPTR\u003cspan class\u003d\"signature\"\u003e\u003cspan class\u003d\"private\"\u003ePRIVATE\u003c/span\u003e\u003cspan class\u003d\"static\"\u003eSTATIC\u003c/span\u003e\u003c/span\u003e\u003c/div\u003e\u003cdiv class\u003d\"description\"\u003e\u003cdiv class\u003d\"short\"\u003eReturns encrypted memptr of a supplied memptr\n\u003c/div\u003e\u003cdiv class\u003d\"long\"\u003e\u003cp\u003eReturns encrypted memptr of a supplied memptr\u003c/p\u003e\n\u003c/br\u003e\u003ch3 class\u003d\"pa\"\u003eParameters\u003c/h3\u003e\u003cul\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003epmValue\u003c/span\u003e : MEMPTR\u003cdiv class\u003d\"sub-desc\"\u003e\u003c/div\u003e\u003c/li\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003eprKey\u003c/span\u003e : RAW\u003cdiv class\u003d\"sub-desc\"\u003e\u003cp\u003ethe encryption key\u003c/p\u003e\n\u003c/div\u003e\u003c/li\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003eprInitVector\u003c/span\u003e : RAW\u003cdiv class\u003d\"sub-desc\"\u003e\u003cp\u003eAn optional expression that evaluates to an initialization vector value\u003c/p\u003e\n\u003c/div\u003e\u003c/li\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003epoCryptoEncryptAlgorithmEnum\u003c/span\u003e : \u003ca href\u003d\"#!/api/Spark.Core.Util.CryptoEncryptAlgorithmEnum\" rel\u003d\"Spark.Core.Util.CryptoEncryptAlgorithmEnum\" class\u003d\"docClass\"\u003eCryptoEncryptAlgorithmEnum\u003c/a\u003e\u003cdiv class\u003d\"sub-desc\"\u003e\u003cp\u003ethe name of the symmetric cryptographic algorithm to use\u003c/p\u003e\n\u003c/div\u003e\u003c/li\u003e\u003c/ul\u003e\u003ch3 class\u003d\"pa\"\u003eReturns\u003c/h3\u003e\u003cul\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003eMEMPTR\u003c/span\u003e\u003cdiv class\u003d\"sub-desc\"\u003e\u003c/div\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv id\u003d\"method-decryptCode\" class\u003d\"member  not-inherited\"\u003e\u003ca href\u003d\"#\" class\u003d\"side expandable\"\u003e\u003cspan\u003e\u0026nbsp;\u003c/span\u003e\u003c/a\u003e\u003cdiv class\u003d\"title\"\u003e\u003cdiv class\u003d\"meta\"\u003e\u003cspan class\u003d\"defined-in\" rel\u003d\"Spark.Core.Util.CryptoTools\"\u003eSpark.Core.Util.CryptoTools\u003c/span\u003e\u003cbr/\u003e\u003c/div\u003e\u003ca href\u003d\"#!/api/Spark.Core.Util.CryptoTools-method-decryptCode\" class\u003d\"name expandable\"\u003edecryptCode\u003c/a\u003e( LONGCHAR,  CHARACTER,  RAW,  \u003ca href\u003d\"#!/api/Spark.Core.Util.CryptoEncryptAlgorithmEnum\" rel\u003d\"Spark.Core.Util.CryptoEncryptAlgorithmEnum\" class\u003d\"docClass\"\u003eCryptoEncryptAlgorithmEnum\u003c/a\u003e,  \u003ca href\u003d\"#!/api/Spark.Core.Util.CryptoPbeHashAlgorithmEnum\" rel\u003d\"Spark.Core.Util.CryptoPbeHashAlgorithmEnum\" class\u003d\"docClass\"\u003eCryptoPbeHashAlgorithmEnum\u003c/a\u003e) : LONGCHAR\u003cspan class\u003d\"signature\"\u003e\u003cspan class\u003d\"private\"\u003ePRIVATE\u003c/span\u003e\u003cspan class\u003d\"static\"\u003eSTATIC\u003c/span\u003e\u003c/span\u003e\u003c/div\u003e\u003cdiv class\u003d\"description\"\u003e\u003cdiv class\u003d\"short\"\u003eReturns the decrypted string of a supplied encrypted character string\n\u003c/div\u003e\u003cdiv class\u003d\"long\"\u003e\u003cp\u003eReturns the decrypted string of a supplied encrypted character string\u003c/p\u003e\n\u003c/br\u003e\u003ch3 class\u003d\"pa\"\u003eParameters\u003c/h3\u003e\u003cul\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003epcValue\u003c/span\u003e : LONGCHAR\u003cdiv class\u003d\"sub-desc\"\u003e\u003cp\u003eThe base64 encoded encrypted data to be decrypted\u003c/p\u003e\n\u003c/div\u003e\u003c/li\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003epcPasswordKey\u003c/span\u003e : CHARACTER\u003cdiv class\u003d\"sub-desc\"\u003e\u003cp\u003ethe password used to generate the encryption key used when the data was encrypted by encryptCode()\u003c/p\u003e\n\u003c/div\u003e\u003c/li\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003eprInitVector\u003c/span\u003e : RAW\u003cdiv class\u003d\"sub-desc\"\u003e\u003cp\u003eAn optional expression that evaluates to an initialization vector value\u003c/p\u003e\n\u003c/div\u003e\u003c/li\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003epoCryptoEncryptAlgorithmEnum\u003c/span\u003e : \u003ca href\u003d\"#!/api/Spark.Core.Util.CryptoEncryptAlgorithmEnum\" rel\u003d\"Spark.Core.Util.CryptoEncryptAlgorithmEnum\" class\u003d\"docClass\"\u003eCryptoEncryptAlgorithmEnum\u003c/a\u003e\u003cdiv class\u003d\"sub-desc\"\u003e\u003cp\u003ethe name of the symmetric cryptographic algorithm used by encryptCode()\u003c/p\u003e\n\u003c/div\u003e\u003c/li\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003epoCryptoPbeHashAlgorithmEnum\u003c/span\u003e : \u003ca href\u003d\"#!/api/Spark.Core.Util.CryptoPbeHashAlgorithmEnum\" rel\u003d\"Spark.Core.Util.CryptoPbeHashAlgorithmEnum\" class\u003d\"docClass\"\u003eCryptoPbeHashAlgorithmEnum\u003c/a\u003e\u003cdiv class\u003d\"sub-desc\"\u003e\u003cp\u003ethe name of the pbe hash algorithm to use\u003c/p\u003e\n\u003c/div\u003e\u003c/li\u003e\u003c/ul\u003e\u003ch3 class\u003d\"pa\"\u003eReturns\u003c/h3\u003e\u003cul\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003eLONGCHAR\u003c/span\u003e\u003cdiv class\u003d\"sub-desc\"\u003e\u003c/div\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv id\u003d\"method-decryptCode-1\" class\u003d\"member  not-inherited\"\u003e\u003ca href\u003d\"#\" class\u003d\"side expandable\"\u003e\u003cspan\u003e\u0026nbsp;\u003c/span\u003e\u003c/a\u003e\u003cdiv class\u003d\"title\"\u003e\u003cdiv class\u003d\"meta\"\u003e\u003cspan class\u003d\"defined-in\" rel\u003d\"Spark.Core.Util.CryptoTools\"\u003eSpark.Core.Util.CryptoTools\u003c/span\u003e\u003cbr/\u003e\u003c/div\u003e\u003ca href\u003d\"#!/api/Spark.Core.Util.CryptoTools-method-decryptCode-1\" class\u003d\"name expandable\"\u003edecryptCode\u003c/a\u003e( LONGCHAR,  RAW,  RAW,  \u003ca href\u003d\"#!/api/Spark.Core.Util.CryptoEncryptAlgorithmEnum\" rel\u003d\"Spark.Core.Util.CryptoEncryptAlgorithmEnum\" class\u003d\"docClass\"\u003eCryptoEncryptAlgorithmEnum\u003c/a\u003e) : LONGCHAR\u003cspan class\u003d\"signature\"\u003e\u003cspan class\u003d\"private\"\u003ePRIVATE\u003c/span\u003e\u003cspan class\u003d\"static\"\u003eSTATIC\u003c/span\u003e\u003c/span\u003e\u003c/div\u003e\u003cdiv class\u003d\"description\"\u003e\u003cdiv class\u003d\"short\"\u003eReturns the decrypted string of a supplied encrypted character string\n\u003c/div\u003e\u003cdiv class\u003d\"long\"\u003e\u003cp\u003eReturns the decrypted string of a supplied encrypted character string\u003c/p\u003e\n\u003c/br\u003e\u003ch3 class\u003d\"pa\"\u003eParameters\u003c/h3\u003e\u003cul\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003epcValue\u003c/span\u003e : LONGCHAR\u003cdiv class\u003d\"sub-desc\"\u003e\u003cp\u003eThe base64 encoded encrypted data to be decrypted\u003c/p\u003e\n\u003c/div\u003e\u003c/li\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003eprKey\u003c/span\u003e : RAW\u003cdiv class\u003d\"sub-desc\"\u003e\u003cp\u003ethe encryption key used when the data was encrypted by encryptCode()\u003c/p\u003e\n\u003c/div\u003e\u003c/li\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003eprInitVector\u003c/span\u003e : RAW\u003cdiv class\u003d\"sub-desc\"\u003e\u003cp\u003eAn optional expression that evaluates to an initialization vector value\u003c/p\u003e\n\u003c/div\u003e\u003c/li\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003epoCryptoEncryptAlgorithmEnum\u003c/span\u003e : \u003ca href\u003d\"#!/api/Spark.Core.Util.CryptoEncryptAlgorithmEnum\" rel\u003d\"Spark.Core.Util.CryptoEncryptAlgorithmEnum\" class\u003d\"docClass\"\u003eCryptoEncryptAlgorithmEnum\u003c/a\u003e\u003cdiv class\u003d\"sub-desc\"\u003e\u003cp\u003ethe name of the symmetric cryptographic algorithm used by encryptCode()\u003c/p\u003e\n\u003c/div\u003e\u003c/li\u003e\u003c/ul\u003e\u003ch3 class\u003d\"pa\"\u003eReturns\u003c/h3\u003e\u003cul\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003eLONGCHAR\u003c/span\u003e\u003cdiv class\u003d\"sub-desc\"\u003e\u003c/div\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv id\u003d\"method-decryptValue\" class\u003d\"member  not-inherited\"\u003e\u003ca href\u003d\"#\" class\u003d\"side expandable\"\u003e\u003cspan\u003e\u0026nbsp;\u003c/span\u003e\u003c/a\u003e\u003cdiv class\u003d\"title\"\u003e\u003cdiv class\u003d\"meta\"\u003e\u003cspan class\u003d\"defined-in\" rel\u003d\"Spark.Core.Util.CryptoTools\"\u003eSpark.Core.Util.CryptoTools\u003c/span\u003e\u003cbr/\u003e\u003c/div\u003e\u003ca href\u003d\"#!/api/Spark.Core.Util.CryptoTools-method-decryptValue\" class\u003d\"name expandable\"\u003edecryptValue\u003c/a\u003e( MEMPTR,  RAW,  RAW,  \u003ca href\u003d\"#!/api/Spark.Core.Util.CryptoEncryptAlgorithmEnum\" rel\u003d\"Spark.Core.Util.CryptoEncryptAlgorithmEnum\" class\u003d\"docClass\"\u003eCryptoEncryptAlgorithmEnum\u003c/a\u003e) : MEMPTR\u003cspan class\u003d\"signature\"\u003e\u003cspan class\u003d\"private\"\u003ePRIVATE\u003c/span\u003e\u003cspan class\u003d\"static\"\u003eSTATIC\u003c/span\u003e\u003c/span\u003e\u003c/div\u003e\u003cdiv class\u003d\"description\"\u003e\u003cdiv class\u003d\"short\"\u003eReturns decrypted memptr of a supplied encrypted memptr\n\u003c/div\u003e\u003cdiv class\u003d\"long\"\u003e\u003cp\u003eReturns decrypted memptr of a supplied encrypted memptr\u003c/p\u003e\n\u003c/br\u003e\u003ch3 class\u003d\"pa\"\u003eParameters\u003c/h3\u003e\u003cul\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003epmValue\u003c/span\u003e : MEMPTR\u003cdiv class\u003d\"sub-desc\"\u003e\u003c/div\u003e\u003c/li\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003eprKey\u003c/span\u003e : RAW\u003cdiv class\u003d\"sub-desc\"\u003e\u003cp\u003ethe encryption key used when the data was encrypted by encryptValue()\u003c/p\u003e\n\u003c/div\u003e\u003c/li\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003eprInitVector\u003c/span\u003e : RAW\u003cdiv class\u003d\"sub-desc\"\u003e\u003cp\u003eAn optional expression that evaluates to an initialization vector value\u003c/p\u003e\n\u003c/div\u003e\u003c/li\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003epoCryptoEncryptAlgorithmEnum\u003c/span\u003e : \u003ca href\u003d\"#!/api/Spark.Core.Util.CryptoEncryptAlgorithmEnum\" rel\u003d\"Spark.Core.Util.CryptoEncryptAlgorithmEnum\" class\u003d\"docClass\"\u003eCryptoEncryptAlgorithmEnum\u003c/a\u003e\u003cdiv class\u003d\"sub-desc\"\u003e\u003cp\u003ethe name of the symmetric cryptographic algorithm to use\u003c/p\u003e\n\u003c/div\u003e\u003c/li\u003e\u003c/ul\u003e\u003ch3 class\u003d\"pa\"\u003eReturns\u003c/h3\u003e\u003cul\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003eMEMPTR\u003c/span\u003e\u003cdiv class\u003d\"sub-desc\"\u003e\u003c/div\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv id\u003d\"method-getEncryptKey\" class\u003d\"member  not-inherited\"\u003e\u003ca href\u003d\"#\" class\u003d\"side expandable\"\u003e\u003cspan\u003e\u0026nbsp;\u003c/span\u003e\u003c/a\u003e\u003cdiv class\u003d\"title\"\u003e\u003cdiv class\u003d\"meta\"\u003e\u003cspan class\u003d\"defined-in\" rel\u003d\"Spark.Core.Util.CryptoTools\"\u003eSpark.Core.Util.CryptoTools\u003c/span\u003e\u003cbr/\u003e\u003c/div\u003e\u003ca href\u003d\"#!/api/Spark.Core.Util.CryptoTools-method-getEncryptKey\" class\u003d\"name expandable\"\u003egetEncryptKey\u003c/a\u003e( CHARACTER,  \u003ca href\u003d\"#!/api/Spark.Core.Util.CryptoEncryptAlgorithmEnum\" rel\u003d\"Spark.Core.Util.CryptoEncryptAlgorithmEnum\" class\u003d\"docClass\"\u003eCryptoEncryptAlgorithmEnum\u003c/a\u003e,  \u003ca href\u003d\"#!/api/Spark.Core.Util.CryptoPbeHashAlgorithmEnum\" rel\u003d\"Spark.Core.Util.CryptoPbeHashAlgorithmEnum\" class\u003d\"docClass\"\u003eCryptoPbeHashAlgorithmEnum\u003c/a\u003e) : RAW\u003cspan class\u003d\"signature\"\u003e\u003cspan class\u003d\"private\"\u003ePRIVATE\u003c/span\u003e\u003cspan class\u003d\"static\"\u003eSTATIC\u003c/span\u003e\u003c/span\u003e\u003c/div\u003e\u003cdiv class\u003d\"description\"\u003e\u003cdiv class\u003d\"short\"\u003eReturns a RAW encryption key that can be passed to encryptCode()\n\u003c/div\u003e\u003cdiv class\u003d\"long\"\u003e\u003cp\u003eReturns a RAW encryption key that can be passed to encryptCode()\u003c/p\u003e\n\u003c/br\u003e\u003ch3 class\u003d\"pa\"\u003eParameters\u003c/h3\u003e\u003cul\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003epcPassword\u003c/span\u003e : CHARACTER\u003cdiv class\u003d\"sub-desc\"\u003e\u003cp\u003eThe password to use in generating the encryption key.\u003c/p\u003e\n\u003c/div\u003e\u003c/li\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003epoCryptoEncryptAlgorithmEnum\u003c/span\u003e : \u003ca href\u003d\"#!/api/Spark.Core.Util.CryptoEncryptAlgorithmEnum\" rel\u003d\"Spark.Core.Util.CryptoEncryptAlgorithmEnum\" class\u003d\"docClass\"\u003eCryptoEncryptAlgorithmEnum\u003c/a\u003e\u003cdiv class\u003d\"sub-desc\"\u003e\u003cp\u003ethe name of the symmetric cryptographic algorithm that this key will be used with\u003c/p\u003e\n\u003c/div\u003e\u003c/li\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003epoCryptoPbeHashAlgorithmEnum\u003c/span\u003e : \u003ca href\u003d\"#!/api/Spark.Core.Util.CryptoPbeHashAlgorithmEnum\" rel\u003d\"Spark.Core.Util.CryptoPbeHashAlgorithmEnum\" class\u003d\"docClass\"\u003eCryptoPbeHashAlgorithmEnum\u003c/a\u003e\u003cdiv class\u003d\"sub-desc\"\u003e\u003cp\u003ethe name of the pbe hash algorithm to use\u003c/p\u003e\n\u003c/div\u003e\u003c/li\u003e\u003c/ul\u003e\u003ch3 class\u003d\"pa\"\u003eReturns\u003c/h3\u003e\u003cul\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003eRAW\u003c/span\u003e\u003cdiv class\u003d\"sub-desc\"\u003e\u003c/div\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv id\u003d\"method-getEncryptKey-1\" class\u003d\"member  not-inherited\"\u003e\u003ca href\u003d\"#\" class\u003d\"side expandable\"\u003e\u003cspan\u003e\u0026nbsp;\u003c/span\u003e\u003c/a\u003e\u003cdiv class\u003d\"title\"\u003e\u003cdiv class\u003d\"meta\"\u003e\u003cspan class\u003d\"defined-in\" rel\u003d\"Spark.Core.Util.CryptoTools\"\u003eSpark.Core.Util.CryptoTools\u003c/span\u003e\u003cbr/\u003e\u003c/div\u003e\u003ca href\u003d\"#!/api/Spark.Core.Util.CryptoTools-method-getEncryptKey-1\" class\u003d\"name expandable\"\u003egetEncryptKey\u003c/a\u003e( CHARACTER,  \u003ca href\u003d\"#!/api/Spark.Core.Util.CryptoEncryptAlgorithmEnum\" rel\u003d\"Spark.Core.Util.CryptoEncryptAlgorithmEnum\" class\u003d\"docClass\"\u003eCryptoEncryptAlgorithmEnum\u003c/a\u003e,  \u003ca href\u003d\"#!/api/Spark.Core.Util.CryptoPbeHashAlgorithmEnum\" rel\u003d\"Spark.Core.Util.CryptoPbeHashAlgorithmEnum\" class\u003d\"docClass\"\u003eCryptoPbeHashAlgorithmEnum\u003c/a\u003e,  RAW) : RAW\u003cspan class\u003d\"signature\"\u003e\u003cspan class\u003d\"private\"\u003ePRIVATE\u003c/span\u003e\u003cspan class\u003d\"static\"\u003eSTATIC\u003c/span\u003e\u003c/span\u003e\u003c/div\u003e\u003cdiv class\u003d\"description\"\u003e\u003cdiv class\u003d\"short\"\u003eReturns a RAW encryption key that can be passed to encryptCode()\n\u003c/div\u003e\u003cdiv class\u003d\"long\"\u003e\u003cp\u003eReturns a RAW encryption key that can be passed to encryptCode()\u003c/p\u003e\n\u003c/br\u003e\u003ch3 class\u003d\"pa\"\u003eParameters\u003c/h3\u003e\u003cul\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003epcPassword\u003c/span\u003e : CHARACTER\u003cdiv class\u003d\"sub-desc\"\u003e\u003cp\u003eThe password to use in generating the encryption key.\u003c/p\u003e\n\u003c/div\u003e\u003c/li\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003epoCryptoEncryptAlgorithmEnum\u003c/span\u003e : \u003ca href\u003d\"#!/api/Spark.Core.Util.CryptoEncryptAlgorithmEnum\" rel\u003d\"Spark.Core.Util.CryptoEncryptAlgorithmEnum\" class\u003d\"docClass\"\u003eCryptoEncryptAlgorithmEnum\u003c/a\u003e\u003cdiv class\u003d\"sub-desc\"\u003e\u003cp\u003ethe name of the symmetric cryptographic algorithm that this key will be used with\u003c/p\u003e\n\u003c/div\u003e\u003c/li\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003epoCryptoPbeHashAlgorithmEnum\u003c/span\u003e : \u003ca href\u003d\"#!/api/Spark.Core.Util.CryptoPbeHashAlgorithmEnum\" rel\u003d\"Spark.Core.Util.CryptoPbeHashAlgorithmEnum\" class\u003d\"docClass\"\u003eCryptoPbeHashAlgorithmEnum\u003c/a\u003e\u003cdiv class\u003d\"sub-desc\"\u003e\u003cp\u003ethe name of the pbe hash algorithm to use\u003c/p\u003e\n\u003c/div\u003e\u003c/li\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003eprSalt\u003c/span\u003e : RAW\u003cdiv class\u003d\"sub-desc\"\u003e\u003cp\u003ethe Raw salt value (Use GENERATE-PBE-SALT to generate a sale value)\u003c/p\u003e\n\u003c/div\u003e\u003c/li\u003e\u003c/ul\u003e\u003ch3 class\u003d\"pa\"\u003eReturns\u003c/h3\u003e\u003cul\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003eRAW\u003c/span\u003e\u003cdiv class\u003d\"sub-desc\"\u003e\u003c/div\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv id\u003d\"method-getRandomEncryptKey\" class\u003d\"member  not-inherited\"\u003e\u003ca href\u003d\"#\" class\u003d\"side expandable\"\u003e\u003cspan\u003e\u0026nbsp;\u003c/span\u003e\u003c/a\u003e\u003cdiv class\u003d\"title\"\u003e\u003cdiv class\u003d\"meta\"\u003e\u003cspan class\u003d\"defined-in\" rel\u003d\"Spark.Core.Util.CryptoTools\"\u003eSpark.Core.Util.CryptoTools\u003c/span\u003e\u003cbr/\u003e\u003c/div\u003e\u003ca href\u003d\"#!/api/Spark.Core.Util.CryptoTools-method-getRandomEncryptKey\" class\u003d\"name expandable\"\u003egetRandomEncryptKey\u003c/a\u003e( \u003ca href\u003d\"#!/api/Spark.Core.Util.CryptoEncryptAlgorithmEnum\" rel\u003d\"Spark.Core.Util.CryptoEncryptAlgorithmEnum\" class\u003d\"docClass\"\u003eCryptoEncryptAlgorithmEnum\u003c/a\u003e) : RAW\u003cspan class\u003d\"signature\"\u003e\u003cspan class\u003d\"private\"\u003ePRIVATE\u003c/span\u003e\u003cspan class\u003d\"static\"\u003eSTATIC\u003c/span\u003e\u003c/span\u003e\u003c/div\u003e\u003cdiv class\u003d\"description\"\u003e\u003cdiv class\u003d\"short\"\u003eReturns a RAW encryption key that can be passed to encryptCode()\n\u003c/div\u003e\u003cdiv class\u003d\"long\"\u003e\u003cp\u003eReturns a RAW encryption key that can be passed to encryptCode()\u003c/p\u003e\n\u003c/br\u003e\u003ch3 class\u003d\"pa\"\u003eParameters\u003c/h3\u003e\u003cul\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003epoCryptoEncryptAlgorithmEnum\u003c/span\u003e : \u003ca href\u003d\"#!/api/Spark.Core.Util.CryptoEncryptAlgorithmEnum\" rel\u003d\"Spark.Core.Util.CryptoEncryptAlgorithmEnum\" class\u003d\"docClass\"\u003eCryptoEncryptAlgorithmEnum\u003c/a\u003e\u003cdiv class\u003d\"sub-desc\"\u003e\u003cp\u003ethe name of the symmetric cryptographic algorithm that this key will be used with\u003c/p\u003e\n\u003c/div\u003e\u003c/li\u003e\u003c/ul\u003e\u003ch3 class\u003d\"pa\"\u003eReturns\u003c/h3\u003e\u003cul\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003eRAW\u003c/span\u003e\u003cdiv class\u003d\"sub-desc\"\u003e\u003c/div\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv id\u003d\"method-getEncryptInitVector\" class\u003d\"member  not-inherited\"\u003e\u003ca href\u003d\"#\" class\u003d\"side expandable\"\u003e\u003cspan\u003e\u0026nbsp;\u003c/span\u003e\u003c/a\u003e\u003cdiv class\u003d\"title\"\u003e\u003cdiv class\u003d\"meta\"\u003e\u003cspan class\u003d\"defined-in\" rel\u003d\"Spark.Core.Util.CryptoTools\"\u003eSpark.Core.Util.CryptoTools\u003c/span\u003e\u003cbr/\u003e\u003c/div\u003e\u003ca href\u003d\"#!/api/Spark.Core.Util.CryptoTools-method-getEncryptInitVector\" class\u003d\"name expandable\"\u003egetEncryptInitVector\u003c/a\u003e( CHARACTER) : RAW\u003cspan class\u003d\"signature\"\u003e\u003cspan class\u003d\"private\"\u003ePRIVATE\u003c/span\u003e\u003cspan class\u003d\"static\"\u003eSTATIC\u003c/span\u003e\u003c/span\u003e\u003c/div\u003e\u003cdiv class\u003d\"description\"\u003e\u003cdiv class\u003d\"short\"\u003eReturns RAW initialization vector that can be passed to encryptCode()\n\u003c/div\u003e\u003cdiv class\u003d\"long\"\u003e\u003cp\u003eReturns RAW initialization vector that can be passed to encryptCode()\u003c/p\u003e\n\u003c/br\u003e\u003ch3 class\u003d\"pa\"\u003eParameters\u003c/h3\u003e\u003cul\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003epcInitVector\u003c/span\u003e : CHARACTER\u003cdiv class\u003d\"sub-desc\"\u003e\u003cp\u003eA string to generate a initialization vector for encryptCode()\u003c/p\u003e\n\u003c/div\u003e\u003c/li\u003e\u003c/ul\u003e\u003ch3 class\u003d\"pa\"\u003eReturns\u003c/h3\u003e\u003cul\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003eRAW\u003c/span\u003e\u003cdiv class\u003d\"sub-desc\"\u003e\u003c/div\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv id\u003d\"method-base64Encode\" class\u003d\"member  not-inherited\"\u003e\u003ca href\u003d\"#\" class\u003d\"side expandable\"\u003e\u003cspan\u003e\u0026nbsp;\u003c/span\u003e\u003c/a\u003e\u003cdiv class\u003d\"title\"\u003e\u003cdiv class\u003d\"meta\"\u003e\u003cspan class\u003d\"defined-in\" rel\u003d\"Spark.Core.Util.CryptoTools\"\u003eSpark.Core.Util.CryptoTools\u003c/span\u003e\u003cbr/\u003e\u003c/div\u003e\u003ca href\u003d\"#!/api/Spark.Core.Util.CryptoTools-method-base64Encode\" class\u003d\"name expandable\"\u003ebase64Encode\u003c/a\u003e( LONGCHAR) : LONGCHAR\u003cspan class\u003d\"signature\"\u003e\u003cspan class\u003d\"private\"\u003ePRIVATE\u003c/span\u003e\u003cspan class\u003d\"static\"\u003eSTATIC\u003c/span\u003e\u003c/span\u003e\u003c/div\u003e\u003cdiv class\u003d\"description\"\u003e\u003cdiv class\u003d\"short\"\u003eReturns a base64 encoded string value of a string value\n\u003c/div\u003e\u003cdiv class\u003d\"long\"\u003e\u003cp\u003eReturns a base64 encoded string value of a string value\u003c/p\u003e\n\u003c/br\u003e\u003ch3 class\u003d\"pa\"\u003eParameters\u003c/h3\u003e\u003cul\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003epcValue\u003c/span\u003e : LONGCHAR\u003cdiv class\u003d\"sub-desc\"\u003e\u003cp\u003eThe value to be encoded\u003c/p\u003e\n\u003c/div\u003e\u003c/li\u003e\u003c/ul\u003e\u003ch3 class\u003d\"pa\"\u003eReturns\u003c/h3\u003e\u003cul\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003eLONGCHAR\u003c/span\u003e\u003cdiv class\u003d\"sub-desc\"\u003e\u003c/div\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv id\u003d\"method-base64Decode\" class\u003d\"member  not-inherited\"\u003e\u003ca href\u003d\"#\" class\u003d\"side expandable\"\u003e\u003cspan\u003e\u0026nbsp;\u003c/span\u003e\u003c/a\u003e\u003cdiv class\u003d\"title\"\u003e\u003cdiv class\u003d\"meta\"\u003e\u003cspan class\u003d\"defined-in\" rel\u003d\"Spark.Core.Util.CryptoTools\"\u003eSpark.Core.Util.CryptoTools\u003c/span\u003e\u003cbr/\u003e\u003c/div\u003e\u003ca href\u003d\"#!/api/Spark.Core.Util.CryptoTools-method-base64Decode\" class\u003d\"name expandable\"\u003ebase64Decode\u003c/a\u003e( LONGCHAR) : LONGCHAR\u003cspan class\u003d\"signature\"\u003e\u003cspan class\u003d\"private\"\u003ePRIVATE\u003c/span\u003e\u003cspan class\u003d\"static\"\u003eSTATIC\u003c/span\u003e\u003c/span\u003e\u003c/div\u003e\u003cdiv class\u003d\"description\"\u003e\u003cdiv class\u003d\"short\"\u003eReturns a decoded string value of a base64 encoded string value\n\u003c/div\u003e\u003cdiv class\u003d\"long\"\u003e\u003cp\u003eReturns a decoded string value of a base64 encoded string value\u003c/p\u003e\n\u003c/br\u003e\u003ch3 class\u003d\"pa\"\u003eParameters\u003c/h3\u003e\u003cul\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003epcValue\u003c/span\u003e : LONGCHAR\u003cdiv class\u003d\"sub-desc\"\u003e\u003cp\u003eThe value to be decoded\u003c/p\u003e\n\u003c/div\u003e\u003c/li\u003e\u003c/ul\u003e\u003ch3 class\u003d\"pa\"\u003eReturns\u003c/h3\u003e\u003cul\u003e\u003cli\u003e\u003cspan class\u003d\"pre\"\u003eLONGCHAR\u003c/span\u003e\u003cdiv class\u003d\"sub-desc\"\u003e\u003c/div\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e","classIcon":"class","members":[{"id":"method-encryptCode","name":"encryptCode","owner":"Spark.Core.Util.CryptoTools","tagname":"method","signature":"encryptCode(INPUT:longchar,INPUT:character,INPUT:raw,INPUT:CryptoEncryptAlgorithmEnum,INPUT:CryptoPbeHashAlgorithmEnum):LONGCHAR","returnComment":"","meta":{"private":true,"static":true}},{"id":"method-encryptCode-1","name":"encryptCode","owner":"Spark.Core.Util.CryptoTools","tagname":"method","signature":"encryptCode(INPUT:longchar,INPUT:raw,INPUT:raw,INPUT:CryptoEncryptAlgorithmEnum):LONGCHAR","returnComment":"","meta":{"private":true,"static":true}},{"id":"method-encryptValue","name":"encryptValue","owner":"Spark.Core.Util.CryptoTools","tagname":"method","signature":"encryptValue(INPUT:memptr,INPUT:raw,INPUT:raw,INPUT:CryptoEncryptAlgorithmEnum):MEMPTR","returnComment":"","meta":{"private":true,"static":true}},{"id":"method-decryptCode","name":"decryptCode","owner":"Spark.Core.Util.CryptoTools","tagname":"method","signature":"decryptCode(INPUT:longchar,INPUT:character,INPUT:raw,INPUT:CryptoEncryptAlgorithmEnum,INPUT:CryptoPbeHashAlgorithmEnum):LONGCHAR","returnComment":"","meta":{"private":true,"static":true}},{"id":"method-decryptCode-1","name":"decryptCode","owner":"Spark.Core.Util.CryptoTools","tagname":"method","signature":"decryptCode(INPUT:longchar,INPUT:raw,INPUT:raw,INPUT:CryptoEncryptAlgorithmEnum):LONGCHAR","returnComment":"","meta":{"private":true,"static":true}},{"id":"method-decryptValue","name":"decryptValue","owner":"Spark.Core.Util.CryptoTools","tagname":"method","signature":"decryptValue(INPUT:memptr,INPUT:raw,INPUT:raw,INPUT:CryptoEncryptAlgorithmEnum):MEMPTR","returnComment":"","meta":{"private":true,"static":true}},{"id":"method-getEncryptKey","name":"getEncryptKey","owner":"Spark.Core.Util.CryptoTools","tagname":"method","signature":"getEncryptKey(INPUT:character,INPUT:CryptoEncryptAlgorithmEnum,INPUT:CryptoPbeHashAlgorithmEnum):RAW","returnComment":"","meta":{"private":true,"static":true}},{"id":"method-getEncryptKey-1","name":"getEncryptKey","owner":"Spark.Core.Util.CryptoTools","tagname":"method","signature":"getEncryptKey(INPUT:character,INPUT:CryptoEncryptAlgorithmEnum,INPUT:CryptoPbeHashAlgorithmEnum,INPUT:raw):RAW","returnComment":"","meta":{"private":true,"static":true}},{"id":"method-getRandomEncryptKey","name":"getRandomEncryptKey","owner":"Spark.Core.Util.CryptoTools","tagname":"method","signature":"getRandomEncryptKey(INPUT:CryptoEncryptAlgorithmEnum):RAW","returnComment":"","meta":{"private":true,"static":true}},{"id":"method-getEncryptInitVector","name":"getEncryptInitVector","owner":"Spark.Core.Util.CryptoTools","tagname":"method","signature":"getEncryptInitVector(INPUT:character):RAW","returnComment":"","meta":{"private":true,"static":true}},{"id":"method-base64Encode","name":"base64Encode","owner":"Spark.Core.Util.CryptoTools","tagname":"method","signature":"base64Encode(INPUT:longchar):LONGCHAR","returnComment":"","meta":{"private":true,"static":true}},{"id":"method-base64Decode","name":"base64Decode","owner":"Spark.Core.Util.CryptoTools","tagname":"method","signature":"base64Decode(INPUT:longchar):LONGCHAR","returnComment":"","meta":{"private":true,"static":true}}],"superclasses":[],"subclasses":[],"meta":{}});