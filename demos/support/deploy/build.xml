<project name="ServerCreation" basedir="." default="usage">

    <target name="usage">
        <echo message="Usage Instructions:"/>
        <echo message="ant create - Build a new PAS instance with PMFO"/>
        <echo message="    -Dhttp=[HTTP_PORT] = port for HTTP connections (Default: 8880)"/>
        <echo message="    -Dhttps=[HTTPS_PORT] = port for HTTPS connections (Default: 8881)"/>
        <echo message="    -Dajp=[AJP13_PORT] = port for AJP13 connections (Default: 8882)"/>
        <echo message="    -Dshut=[SHUTDOWN_PORT] = Tomcat shutdown port (Default: 8883)"/>
        <echo message="    -Dalias=[INSTANCE_NAME] = new instance name (Default: MyPAS1)"/>
        <echo message="    -Dpath=[INSTANCE_PATH] = new instance path (Default: C:\PASOE)"/>
        <echo message="    -Dablapp=[INSTANCE_NAME] = default ABL App name (Default: {alias})"/>
        <echo message="    -Dwebapp=[INSTANCE_NAME] = default WebApp name (Default: app)"/>
        <echo message="    -Dwarfile=[INSTANCE_NAME] = default WAR file (Default: oeabl.war)"/>
    </target>

    <target name="init_env">
        <property environment="env"/>

        <!-- Check if DLC is set as an environment variable. -->
        <fail message="$DLC path is not set">
            <condition>
                <and>
                    <not><isset property="dlcHome"/></not>
                    <not><isset property="env.DLC"/></not>
                </and>
            </condition>
        </fail>
        <property name="dlcHome" value="${env.DLC}"/>
        <echo message="DLC Home: ${dlcHome}"/>

        <!-- Determine current operating system in use. -->
        <echo message="OS Arch: ${os.arch}"/>
        <condition property="isWin64">
            <os family="windows"/>
        </condition>
        <condition property="isUnix">
            <os family="unix"/>
        </condition>
    </target>

    <target name="init_unix" if="isUnix">
        <property name="scriptSuffix" value="sh"/>
    </target>

    <target name="init_windows" if="isWin64">
        <property name="scriptSuffix" value="bat"/>
    </target>

    <target name="create" depends="init_env,init_unix,init_windows">
        <!-- Prepare defaults for any properties that are not set. -->
        <property name="http" value="8880"/>
        <property name="https" value="8881"/>
        <property name="ajp" value="8882"/>
        <property name="shut" value="8883"/>
        <property name="alias" value="MyPAS1"/>
        <property name="path" value="C:\PASOE"/>
        <property name="pas.path" value="${path}\${alias}"/>
        <property name="ablapp" value="${alias}"/>
        <property name="webapp" value="app"/>
        <property name="warfile" value="oeabl.war"/>
        <property name="dlc.bin" value="${dlcHome}/bin"/>
        <property name="pas.bin" value="${pas.path}/bin"/>

        <!-- Begin by creating an instance. -->
        <antcall target="create_instance"/>
    </target>

    <target name="dir_check">
        <!-- Check if deployment directory exists. -->
        <condition property="deploy.exists">
            <available file="${basedir}/${alias}" type="dir"/>
        </condition>

        <!-- Check if properties file exists. -->
        <condition property="merge.exists">
            <available file="${basedir}/${alias}/merge.openedge.properties" type="file"/>
        </condition>

        <!-- Check if a WebApp exists. -->
        <condition property="webapp.exists">
            <available file="${basedir}/${alias}/${warfile}" type="file"/>
        </condition>
    </target>

    <target name="create_instance">
        <!-- Create the PAS instance using the values (or defaults) provided. -->
        <echo message="Creating PAS instance '${alias}' at ${pas.path} with ports ${http}/${https}/${ajp}/${shut}..."/>
        <exec dir="${dlc.bin}" executable="pasman.${scriptSuffix}" output="create_${alias}.txt" failonerror="true">
            <arg value="create"/>
            <arg value="-v"/>
            <arg line="-p ${http}"/>
            <arg line="-P ${https}"/>
            <arg line="-j ${ajp}"/>
            <arg line="-s ${shut}"/>
            <arg line="-N ${alias}"/>
            <arg value="${pas.path}"/>
            <arg value="${ablapp}"/>
        </exec>
        <echo message="See file create_${alias}.txt for details of PAS server creation."/>

        <!-- Tailor the instance using the deployment directory. -->
        <antcall target="tailor_instance"/>

        <!-- Merge any available properties to the instance. -->
        <antcall target="merge_properties"/>

        <!-- Deploy a known WebApp (when WAR is available). -->
        <antcall target="deploy_webapp"/>

        <!-- Deploy a default WebApp (if no WAR available). -->
        <antcall target="deploy_default"/>
    </target>

    <target name="tailor_instance" depends="dir_check" if="deploy.exists">
        <!-- Copy the PL/PF files to the new PAS instance. -->
        <copy toDir="${pas.path}/openedge">
            <fileset dir="${basedir}/${alias}/openedge">
                <include name="*.pl"/>
                <include name="*.pf"/>
            </fileset>
        </copy>

        <!-- Copy initial configuration files to the PAS instance. -->
        <copy toDir="${pas.path}/conf">
            <fileset dir="${basedir}/${alias}/conf">
                <include name="**/*"/>
            </fileset>
        </copy>

        <!-- Copy shared Tomcat files to the PAS instance. -->
        <copy toDir="${pas.path}/common">
            <fileset dir="${basedir}/${alias}/common">
                <include name="**/*"/>
            </fileset>
        </copy>
    </target>

    <target name="merge_properties" depends="dir_check" if="merge.exists">
        <!-- Merge the intitial properties for the instance. -->
        <echo message="Merging initial properties from 'merge.openedge.properties'"/>
        <exec executable="${pas.path}/bin/oeprop.${scriptSuffix}" output="merge_${alias}.txt" failonerror="true">
            <arg line="-f ${basedir}/${alias}/merge.openedge.properties"/>
        </exec>
    </target>

    <target name="deploy_webapp" depends="dir_check" if="webapp.exists">
        <!-- Deploy the named WebApp to the new instance. -->
        <echo message="Deploying '${warfile}' as WebApp '${webapp}'"/>
        <exec executable="${pas.path}/bin/tcman.${scriptSuffix}" output="deploy_${ablapp}_${webapp}.txt" failonerror="true">
            <arg line="deploy -a ${webapp} ${basedir}/${alias}/${warfile} ${ablapp}"/>
        </exec>
    </target>

    <target name="deploy_default" depends="dir_check" unless="webapp.exists">
        <!-- Deploy a default WebApp to the new instance. -->
        <echo message="Deploying 'oeabl.war' as WebApp '${webapp}'"/>
        <exec executable="${pas.path}/bin/tcman.${scriptSuffix}" output="deploy_${ablapp}_${webapp}.txt" failonerror="true">
            <arg line="deploy -a ${webapp} ${dlcHome}/servers/pasoe/extras/oeabl.war ${ablapp}"/>
        </exec>
    </target>

</project>
